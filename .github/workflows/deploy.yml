name: Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Deploy
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16.x

      - name: Install Nix
        run: |
          curl -L https://nixos.org/nix/install | sh
          . /home/runner/.nix-profile/etc/profile.d/nix.sh
          nix-channel --update

      - name: Setup Nix environment
        run: |
          echo 'with import <nixpkgs> {}; stdenv.mkDerivation {
            name = "my-env";
            buildInputs = [ clojure truffle ganache-cli solc shadow-cljs ];
          }' > default.nix
          nix-shell

      - name: Install Clojure CLI
        run: |
          nix-env -iA nixpkgs.clojure

      - name: Run Leiningen tests
        run: lein test
        continue-on-error: true

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          working-directory: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Smart Contracts
        run: |
          if [ -z "${{ secrets.INFURA_PROJECT_ID }}" ] || [ -z "${{ secrets.DEPLOYER_PRIVATE_KEY }}" ]; then
            echo "Error: INFURA_PROJECT_ID or DEPLOYER_PRIVATE_KEY is not set."
            exit 1
          fi
          truffle migrate --network mainnet
        continue-on-error: true
        env:
          INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
